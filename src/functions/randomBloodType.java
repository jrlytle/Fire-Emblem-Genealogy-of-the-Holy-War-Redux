package functions;
import java.util.Random;
public class randomBloodType
{
  int[] bloodBonus = new int[24];
  int total = 0;
  Random r = new Random();
  int[] myUnitOne = new int[13];
  /*int[] myUnitTwo = new int[13];
  int[] myUnitThree = new int[13];
  int[] myUnitFour = new int[13];
  int[] myUnitFive = new int[13];*/

  int[] dummyOne = getBloodType(myUnitOne);
  /*int[] dummyTwo = getBloodType(myUnitTwo);
  int[] dummyThree = getBloodType(myUnitThree);
  int[] dummyFour = getBloodType(myUnitFour);
  int[] dummyFive = getBloodType(myUnitFive);*/
  
  int[][][] bloodTypes = //*10
      {
        {{17,8,0,8,0,8,0,0},{33,17,0,17,0,17,0,0},{50,25,0,25,0,25,0,0},{67,33,0,33,0,33,0,0},{83,42,0,42,0,42,0,0},{100,50,0,50,0,50,0,0},{117,58,0,58,0,58,0,0},{133,66,0,66,0,66,0,0},{150,75,0,75,0,75,0,0},{167,83,0,83,0,83,0,0},{183,92,0,92,0,92,0,0},{200,100,0,100,0,100,0,0},{217,108,0,108,0,108,0,0},{233,117,0,117,0,117,0,0},{250,125,0,125,0,125,0,0},{266,132,0,132,0,132,0,0},{283,142,0,142,0,142,0,0},{300,150,0,150,0,150,0,0},{317,158,0,158,0,158,0,0},{333,167,0,167,0,167,0,0},{350,175,0,175,0,175,0,0},{367,183,0,183,0,183,0,0},{383,192,0,192,0,192,0,0},{400,200,0,200,0,200,0,0}}, //Baldo
        {{17,0,0,25,0,0,0,0},{33,0,0,50,0,0,0,0},{50,0,0,75,0,0,0,0},{67,0,0,100,0,0,0,0},{83,0,0,125,0,0,0,0},{100,0,0,150,0,0,0,0},{117,0,0,175,0,0,0,0},{133,0,0,200,0,0,0,0},{150,0,0,225,0,0,0,0},{167,0,0,250,0,0,0,0},{183,0,0,275,0,0,0,0},{200,0,0,300,0,0,0,0},{217,0,0,325,0,0,0,0},{233,0,0,350,0,0,0,0},{250,0,0,375,0,0,0,0},{266,0,0,400,0,0,0,0},{283,0,0,425,0,0,0,0},{300,0,0,450,0,0,0,0},{317,0,0,475,0,0,0,0},{333,0,0,500,0,0,0,0},{350, 0, 0, 525, 0, 0, 0, 0},{367,0,0,550,0,0,0,0},{383,0,0,575,0,0,0,0},{400, 0, 0, 600, 0, 0, 0, 0}},//Odo
        {{17,25,0,0,0,0,0,0},{33,50,0,0,0,0,0,0},{50,75,0,0,0,0,0,0},{67,100,0,0,0,0,0,0},{83,125,0,0,0,0,0,0},{100,150,0,0,0,0,0,0},{117,175,0,0,0,0,0,0},{133,200,0,0,0,0,0,0},{150,225,0,0,0,0,0,0},{167,250,0,0,0,0,0,0},{183,275,0,0,0,0,0,0},{200,300,0,0,0,0,0,0},{217,325,0,0,0,0,0,0},{233,350,0,0,0,0,0,0},{250,375,0,0,0,0,0,0},{266,400,0,0,0,0,0,0},{283,425,0,0,0,0,0,0},{300,450,0,0,0,0,0,0},{317,475,0,0,0,0,0,0},{333,500,0,0,0,0,0,0},{350,525,0,0,0,0,0,0},{367,550,0,0,0,0,0,0},{383,575,0,0,0,0,0,0},{400, 600, 0, 0, 0, 0, 0, 0}},//Hezul
        {{17,8,0,0,8,0,8,0},{33,17,0,0,17,0,17,0},{50,25,0,0,25,0,25,0},{67,33,0,0,33,0,33,0},{83,42,0,0,42,0,42,0},{100,50,0,0,50,0,50,0},{117,58,0,0,58,0,58,0},{133,66,0,0,66,0,66,0},{150,75,0,0,75,0,75,0},{167,83,0,0,83,0,83,0},{183,92,0,0,92,0,92,0},{200,100,0,0,100,0,100,0},{217,108,0,0,108,0,108,0},{233,117,0,0,117,0,117,0},{250,125,0,0,125,0,125,0},{266,133,0,0,133,0,133,0},{283,142,0,0,142,0,142,0},{300,150,0,0,150,0,150,0},{317,158,0,0,158,0,158,0},{333,167,0,0,167,0,167,0},{350,175,0,0,175,0,175,0},{367,183,0,0,183,0,183,0},{383,192,0,0,192,0,192,0},{400,200,0,0,200,0,200,0}},//Noba
        {{17,0,0,0,25,0,0,0},{33,0,0,0,50,0,0,0},{50,0,0,0,75,0,0,0},{67,0,0,0,100,0,0,0},{83,0,0,0,125,0,0,0},{100,0,0,0,150,0,0,0},{117,0,0,0,175,0,0,0},{133,0,0,0,200,0,0,0},{150,0,0,0,225,0,0,0},{167,0,0,0,250,0,0,0},{183,0,0,0,275,0,0,0},{200,0,0,0,300,0,0,0},{217,0,0,0,325,0,0,0},{233,0,0,0,350,0,0,0},{250,0,0,0,375,0,0,0},{266,0,0,0,400,0,0,0},{283,0,0,0,425,0,0,0},{300, 0, 0, 0, 450, 0, 0, 0},{317,0,0,0,475,0,0,0},{333,0,0,0,500,0,0,0},{350,0,0,0,525,0,0,0},{367,0,0,0,550,0,0,0},{383,0,0,0,575,0,0,0},{400,0,0,0,600,0,0,0}},//Dain
        {{17,0,0,0,0,0,25,0},{33,0,0,0,0,0,50,0},{50,0,0,0,0,0,75,0},{67,0,0,0,0,0,100,0},{83,0,0,0,0,0,125,0},{100,0,0,0,0,0,150,0},{117,0,0,0,0,0,175,0},{133,0,0,0,0,0,200,0},{150,0,0,0,0,0,225,0},{167,0,0,0,0,0,250,0},{183,0,0,0,0,0,275,0},{200,0,0,0,0,0,300,0},{217,0,0,0,0,0,325,0},{233,0,0,0,0,0,350,0},{250,0,0,0,0,0,375,0},{266,0,0,0,0,0,400,0},{283,0,0,0,0,0,425,0},{300,0,0,0,0,0,450,0},{317,0,0,0,0,0,475,0},{333,0,0,0,0,0,500,0},{350,0,0,0,0,0,525,0},{367,0,0,0,0,0,550,0},{383,0,0,0,0,0,575,0},{400,0,0,0,0,0,600,0}},//Neir
        {{17,0,0,0,0,25,0,0},{33,0,0,0,0,50,0,0},{50,0,0,0,0,75,0,0},{67,0,0,0,0,100,0,0},{83,0,0,0,0,125,0,0},{100,0,0,0,0,150,0,0},{117,0,0,0,0,175,0,0},{133,0,0,0,0,200,0,0},{150,0,0,0,0,225,0,0},{167,0,0,0,0,250,0,0},{183,0,0,0,0,275,0,0},{200,0,0,0,0,300,0,0},{217,0,0,0,0,325,0,0},{233,0,0,0,0,350,0,0},{250,0,0,0,0,375,0,0},{266,0,0,0,0,400,0,0},{283,0,0,0,0,425,0,0},{300,0,0,0,0,450,0,0},{317,0,0,0,0,475,0,0},{333,0,0,0,0,500,0,0},{350,0,0,0,0,525,0,0},{367,0,0,0,0,550,0,0},{383,0,0,0,0,575,0,0},{400,0,0,0,0,600,0,0}},//Ulir
        {{8,0,8,0,0,8,0,17},{17,0,17,0,0,17,0,33},{25,0,25,0,0,25,0,50},{33,0,33,0,0,33,0,67},{42,0,42,0,0,42,0,83},{50,0,50,0,0,50,0,100},{58,0,58,0,0,58,0,117},{66,0,66,0,0,66,0,133},{75,0,75,0,0,75,0,150},{83,0,83,0,0,83,0,167},{92,0,92,0,0,92,0,183},{100,0,100,0,0,100,0,200},{108,0,108,0,0,108,0,217},{117,0,117,0,0,117,0,233},{125,0,125,0,0,125,0,250},{133,0,133,0,0,133,0,266},{142,0,142,0,0,142,0,283},{150,0,150,0,0,150,0,300},{158,0,158,0,0,158,0,317},{167,0,167,0,0,167,0,333},{175,0,175,0,0,175,0,350},{183,0,183,0,0,183,0,367},{192,0,192,0,0,192,0,383},{200,0,200,0,0,200,0,400}},//Blagi
        {{17,0,25,0,0,0,0,0},{33,0,50,0,0,0,0,0},{50,0,75,0,0,0,0,0},{67,0,100,0,0,0,0,0},{83,0,125,0,0,0,0,0},{100,0,150,0,0,0,0,0},{117,0,175,0,0,0,0,0},{133,0,200,0,0,0,0,0},{150,0,225,0,0,0,0,0},{167,0,250,0,0,0,0,0},{183,0,275,0,0,0,0,0},{200,0,300,0,0,0,0,0},{217,0,325,0,0,0,0,0},{233,0,350,0,0,0,0,0},{250,0,375,0,0,0,0,0},{266,0,400,0,0,0,0,0},{283,0,425,0,0,0,0,0},{300,0,450,0,0,0,0,0},{317,0,475,0,0,0,0,0},{333,0,500,0,0,0,0,0},{350,0,525,0,0,0,0,0},{367,0,550,0,0,0,0,0},{383,0,575,0,0,0,0,0},{400,0,600,0,0,0,0,0}},//Fala
        {{17,0,0,25,0,0,0,0},{33,0,0,50,0,0,0,0},{50,0,0,75,0,0,0,0},{67,0,0,100,0,0,0,0},{83,0,0,125,0,0,0,0},{100,0,0,150,0,0,0,0},{117,0,0,175,0,0,0,0},{133,0,0,200,0,0,0,0},{150,0,0,225,0,0,0,0},{167,0,0,250,0,0,0,0},{183,0,0,275,0,0,0,0},{200,0,0,300,0,0,0,0},{217,0,0,325,0,0,0,0},{233,0,0,350,0,0,0,0},{250,0,0,375,0,0,0,0},{266,0,0,400,0,0,0,0},{283,0,0,425,0,0,0,0},{300,0,0,450,0,0,0,0},{317,0,0,475,0,0,0,0},{333,0,0,500,0,0,0,0},{350,0,0,525,0,0,0,0},{367,0,0,550,0,0,0,0},{383,0,0,575,0,0,0,0},{400,0,0,600,0,0,0,0}},//Tordo
        {{17,0,0,0,25,0,0,0},{33,0,0,0,50,0,0,0},{50,0,0,0,75,0,0,0},{67,0,0,0,100,0,0,0},{83,0,0,0,125,0,0,0},{100,0,0,0,150,0,0,0},{117,0,0,0,175,0,0,0},{133,0,0,0,200,0,0,0},{150,0,0,0,225,0,0,0},{167,0,0,0,250,0,0,0},{183,0,0,0,275,0,0,0},{200,0,0,0,300,0,0,0},{217,0,0,0,325,0,0,0},{233,0,0,0,350,0,0,0},{250,0,0,0,375,0,0,0},{266,0,0,0,400,0,0,0},{283,0,0,0,425,0,0,0},{300,0,0,0,450,0,0,0},{317,0,0,0,475,0,0,0},{333,0,0,0,500,0,0,0},{350,0,0,0,525,0,0,0},{367,0,0,0,550,0,0,0},{383,0,0,0,575,0,0,0},{400,0,0,0,600,0,0,0}},//Holsety
        {{8,0,17,0,0,0,0,17},{17,0,33,0,0,0,0,33},{25,0,50,0,0,0,0,50},{33,0,67,0,0,0,0,67},{42,0,83,0,0,0,0,83},{50,0,100,0,0,0,0,100},{58,0,117,0,0,0,0,117},{66,0,133,0,0,0,0,133},{75,0,150,0,0,0,0,150},{83,0,167,0,0,0,0,167},{92,0,183,0,0,0,0,183},{100,0,200,0,0,0,0,200},{108,0,217,0,0,0,0,217},{117,0,233,0,0,0,0,233},{125,0,250,0,0,0,0,250},{133,0,266,0,0,0,0,266},{142,0,283,0,0,0,0,283},{150,0,300,0,0,0,0,300},{158,0,317,0,0,0,0,317},{167,0,333,0,0,0,0,333},{175,0,350,0,0,0,0,350},{183,0,367,0,0,0,0,367},{192,0,383,0,0,0,0,383},{200,0,400,0,0,0,0,400}},//Narga
        {{8,0,17,0,0,0,0,17},{17,0,33,0,0,0,0,33},{25,0,50,0,0,0,0,50},{33,0,67,0,0,0,0,67},{42,0,83,0,0,0,0,83},{50,0,100,0,0,0,0,100},{58,0,117,0,0,0,0,117},{66,0,133,0,0,0,0,133},{75,0,150,0,0,0,0,150},{83,0,167,0,0,0,0,167},{92,0,183,0,0,0,0,183},{100,0,200,0,0,0,0,200},{108,0,217,0,0,0,0,217},{117,0,233,0,0,0,0,233},{125,0,250,0,0,0,0,250},{133,0,266,0,0,0,0,266},{142,0,283,0,0,0,0,283},{150,0,300,0,0,0,0,300},{158,0,317,0,0,0,0,317},{167,0,333,0,0,0,0,333},{175,0,350,0,0,0,0,350},{183,0,367,0,0,0,0,367},{192,0,383,0,0,0,0,383},{200,0,400,0,0,0,0,400}}//Loputousu
      };
  public int getPercents(int bloodType, int bloodPercent, int stat)
  {
    return bloodTypes[bloodType][bloodPercent][stat];
  }
  public int[] getBloodPercent(int[] bloodTypesPercent)
  {
    int[] bloodBonus = new int[8];
    
    for(int bloodType = 0; bloodType < 13; bloodType++)
    {
      for(int stat = 0; stat <= 7; stat++)
      {
        if(bloodTypesPercent[bloodType] > 0)
        {
          bloodBonus[stat] += bloodTypes[bloodType][bloodTypesPercent[bloodType]-1][stat];
        }
      }
    }
    return bloodBonus;
  }
  public int[] getBloodType(int[] bloodTypePercents)
  {
    int random = r.nextInt(24);
    int bloodtype = r.nextInt(13);
    total += random;
    bloodTypePercents[bloodtype] += random;
    if(total < 24)
    {
      getBloodType(bloodTypePercents);
    }
    if(total == 24)
    {
      return bloodTypePercents;
    }
    if(total > 24)
    {
      total = 0;
      resetBloodBonus(bloodTypePercents);
      getBloodType(bloodTypePercents);
    }
    return bloodTypePercents;
  }
  
  public int[] getUnitBloodType(int choice)
  {
    //System.out.println(one + " " + two + " " + three + " " + four + " " + five + " " + six + " " + seven + " " + eight + " " + nine + " " + ten + " " + eleven + " " + twelve + " " + thirteen);
    switch(choice)
    {
      case 1: return myUnitOne;
      /*case 2: return myUnitTwo;
      case 3: return myUnitThree;
      case 4: return myUnitFour;*/
    }
    return myUnitOne;
  }
  
  public void resetBloodBonus(int[] bloodTypePercents)
  {
    for(int i = 0; i< bloodTypePercents.length; i++)
    {
      bloodTypePercents[i] = 0;
    }
  }
  
  public double percentage(int n)
  {
    switch(n)
    {
      case 1: return 1.0/24.0;
      case 2: return 1.0/12.0;
      case 3: return 0.125;
      case 4: return 1.0/6.0;
      case 5: return 5.0/24.0;
      case 6: return 0.25;
      case 7: return 7.0/24.0;
      case 8: return 1.0/3.0;
      case 9: return 0.375;
      case 10: return 5.0/12.0;
      case 11: return 11.0/24.0;
      case 12: return 0.5;
      case 13: return 13.0/24.0;
      case 14: return 7.0/12.0;
      case 15: return 0.625;
      case 16: return 2.0/3.0;
      case 17: return 17.0/24.0;
      case 18: return 0.75;
      case 19: return 19.0/24.0;
      case 20: return 5.0/6.0;
      case 21: return 0.875;
      case 22: return 11.0/12.0;
      case 23: return 23.0/24.0;
      case 24: return 1.0;
    }
    return 0.0;
  }
  
  //Baldo, Odo, Hezul, Noba, Dain, Neir, Ulir, Blagi, Fala, Tordo, Holsety, Narga, Loputousu
  public String getBloodType(int blood)
  {
    switch(blood)
    {
      case 0: return "Baldo";
      case 1: return "Odo";
      case 2: return "Hezul";
      case 3: return "Noba";
      case 4: return "Dain";
      case 5: return "Neir";
      case 6: return "Ulir";
      case 7: return "Blagi";
      case 8: return "Fala";
      case 9: return "Tordo";
      case 10: return "Holsety";
      case 11: return "Narga";
      case 12: return "Loputousu";
    }
    return "";
  }
  
  public int getRandomStats(int internalLevel, int statGrowthRate)
  {
    int stat = 0;
    for(int level = 0; level < internalLevel; level++)
    {
      int random = r.nextInt(1000);
      int growthRate = statGrowthRate;
      while(growthRate > 1000)
      {
        stat++;
        growthRate -= 1000;
      }
      if(random < growthRate)
      {
        stat++;
      }
    }
    return stat;
  }
}